image: nixos/nix:latest

before_script:
  # Pipeline dependencies
  - nix-env -i git openssh curl

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  - git clone git@gitlab.com:cinematheque-quebecoise/cinetvdb.git

stages:
  - build

# Compiling source code after "push"
compile:
  stage: build
  script:
    - nix-build --no-out-link release.nix

# Create a new tag and release based on the version in "package.yaml" when the
# pipeline source a trigger and is applied on the master branch.
release:
  stage: build
  script:
    # Find version in "package.yaml"
    - VERSION=$(grep version package.yaml | sed 's/version:\s*\([[:digit:]]\.[[:digit:]]*\)/\1/')
    # Create a new tag and release
    - "curl --header 'Content-Type: application/json' --header \"PRIVATE-TOKEN: $ACCESS_TOKEN\" --data '{ \"name\": \"Version '${VERSION}' release\", \"tag_name\": \"v'${VERSION}'\", \"ref\": \"master\" }' --request POST https://gitlab.com/api/v4/projects/18031890/releases"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "trigger"'
      when: always
